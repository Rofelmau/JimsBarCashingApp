name: Build for Raspberry Pi 5 (ARM64)

on:
  push:
    branches:
      - '**' # Trigger on all branches

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: lukka/get-cmake@latest

      - name: Install SQLite (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev

      - name: Install Compiler
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu ninja-build

      - name: compile qt for arm64
        env:
          QT_VERSION: 5.15.0
        run: |
          mkdir -p ~/rpi/{build,tools,sysroot}
          cd ~/rpi
          wget http://download.qt.io/archive/qt/${QT_VERSION:0:4}/${QT_VERSION}/single/qt-everywhere-src-${QT_VERSION}.tar.xz
          tar xvf qt-everywhere-src-${QT_VERSION}.tar.xz
          # Forcefully prepend <limits> to problematic files
          sed -i '1i #include <limits>' qt-everywhere-src-${QT_VERSION}/qtbase/src/corelib/global/qfloat16.h
          sed -i '1i #include <limits>' qt-everywhere-src-${QT_VERSION}/qtbase/src/corelib/global/qendian.h
          sed -i '1i #include <limits>' qt-everywhere-src-${QT_VERSION}/qtbase/src/corelib/text/qbytearraymatcher.h
          # Remove invalid compiler flags from mkspecs
          sed -i '/-mfpu=crypto-neon-fp-armv8/d' qt-everywhere-src-${QT_VERSION}/qtbase/mkspecs/devices/linux-rasp-pi4-v3d-g++/qmake.conf
          sed -i '/-mfloat-abi=hard/d' qt-everywhere-src-${QT_VERSION}/qtbase/mkspecs/devices/linux-rasp-pi4-v3d-g++/qmake.conf
          # Configure and build
          cd qt-everywhere-src-${QT_VERSION}
          ./configure -release -opengl es2 -eglfs -device linux-rasp-pi4-v3d-g++ -device-option CROSS_COMPILE=/usr/bin/aarch64-linux-gnu- -sysroot ~/rpi/sysroot -prefix /usr/local/qt5.15 -opensource -confirm-license -nomake tests -nomake examples -make libs -pkg-config -no-use-gold-linker
          make -j$(nproc)
          make install

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_SYSTEM_NAME=Linux -DCMAKE_SYSTEM_PROCESSOR=aarch64 -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ -G Ninja

      - name: Build project
        run: cmake --build build --config Release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: rpi5-build
          path: build/
