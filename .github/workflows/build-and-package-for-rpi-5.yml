name: Build Qt Application for Raspberry Pi 5

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Build in arm64 container
        uses: uraimo/run-on-arch-action@v3.0.0
        with:
          arch: aarch64
          base_image: carlonluca/qt-dev:5.15.2
          install: |
            apt-get update
            apt-get install -y sqlite3-0:arm64
          run: |
            # Setze den Pfad für ARM Qt-Bibliotheken, falls nicht bereits gesetzt
            export PATH=/opt/Qt-arm64-5.15.2/bin:$PATH
            export QT_LIBRARY_PATH=${QT_LIBRARY_PATH:-/opt/Qt-arm64-5.15.2/lib}
            export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:-/opt/Qt-arm64-5.15.2/lib}

            # Überprüfe, ob die ARM-Version von moc verwendet wird
            which moc
            echo "QT_LIBRARY_PATH: $QT_LIBRARY_PATH"
            echo "LD_LIBRARY_PATH: $LD_LIBRARY_PATH"

            # Setze sicher, dass wir die richtige Architektur verwenden
            export ARCH=aarch64

            # Bereinige den Build-Ordner, falls bereits etwas vorhanden ist
            rm -rf build
            mkdir -p build
            cd build

            # Füge den Pfad zu Qt und der Toolchain hinzu, um sicherzustellen, dass die ARM-Version genutzt wird
            cmake .. \
              -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_SYSTEM_NAME=Linux \
              -DCMAKE_SYSTEM_PROCESSOR=${ARCH} \
              -DCMAKE_PREFIX_PATH=/opt/Qt-arm64-5.15.2 \
              -DCMAKE_FIND_ROOT_PATH=/opt/Qt-arm64-5.15.2 \
              2>&1 | tee ../cmake_config_log.txt

            # Baue das Projekt
            make -j$(nproc) 2>&1 | tee ../make_build_log.txt

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: MyProject-RaspberryPi
          path: build/src/MyProject
