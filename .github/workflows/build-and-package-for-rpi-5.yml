name: Build Qt Application for Raspberry Pi 5

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build custom Qt image
        run: |
          docker buildx build \
            --platform linux/arm64 \
            -t custom-qt-image \
            --load \
            - <<EOF
          FROM carlonluca/qt-dev:5.15.2

          # Install or update necessary tools
          RUN apt-get update && apt-get install -y \
              build-essential \
              ninja-build \
              wget \
              git \
              python3 \
              sqlite3 \
              gcc g++

          # Replace CMake with a known working version
          RUN apt-get purge --remove -y cmake && \
              wget https://github.com/Kitware/CMake/releases/download/v3.22.0/cmake-3.22.0-linux-aarch64.sh && \
              chmod +x cmake-3.22.0-linux-aarch64.sh && \
              ./cmake-3.22.0-linux-aarch64.sh --skip-license --prefix=/usr

          # Create build directory
          RUN mkdir -p /workspace/build
          EOF

      - name: Verify CMake version
        run: |
          docker run --rm \
            --platform linux/arm64 \
            custom-qt-image cmake --version

      - name: Debug files
        run: |
          docker run --rm \
            --platform linux/arm64 \
            -v $(pwd):/workspace \
            custom-qt-image ls -la /workspace

      - name: Configure the project with CMake
        run: |
          docker run --rm \
            --platform linux/arm64 \
            -v $(pwd):/workspace \
            -w /workspace/build \
            custom-qt-image cmake -DCMAKE_TOOLCHAIN_FILE=/workspace/toolchain.cmake -DCMAKE_BUILD_TYPE=Release ..

      - name: Build the project with Make
        run: |
          docker run --rm \
            --platform linux/arm64 \
            -v $(pwd):/workspace \
            -w /workspace/build \
            custom-qt-image make -j$(nproc)

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: QtBuild
          path: build/